###################1、A simple plot#############
import matplotlib
import matplotlib.pyplot as plt
import numpy as np

t=np.arange(0,2,0.01)
s=1+np.sin(2*np.pi*t)

fig, ax=plt.subplots()
ax.plot(t,s)

ax.set(xlabel='time(s)', ylabel='voltage(mV)', title='About as simple as it gets, folks')
ax.grid()
#fig.savefig('test.png')


###############/2、
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.collections as collections

t=np.arange(0,2,0.01)
s1=np.sin(2*np.pi*t)
s2=1.2*np.sin(4*np.pi*t)

fig, ax=plt.subplots()
ax.set_title('using span_where')
ax.plot(t,s1,color='black')
ax.axhline(0,color='black',lw=2)

collection=collections.BrokenBarHCollection.span_where(t,ymin=0,ymax=1,where=s1>0,
                        facecolor='green',alpha=0.5)
ax.add_collection(collection)

collection=collections.BrokenBarHCollection.span_where(t,ymin=-1,ymax=0,where=s1<0,
                        facecolor='red', alpha=0.5)
ax.add_collection(collection)

#################3、






###########################curve plot, and set x,y point on the axis#######################
import matplotlib.pyplot as plt
from matplotlib.collections import EventCollection
import numpy as np

np.random.seed(19680801)

xdata=np.random.random([2,10])

xdata1=xdata[0,:]
xdata2=xdata[1,:]

xdata1.sort()
xdata2.sort()

ydata1=xdata1**2
ydata2=1-xdata2**3

fig=plt.figure()
ax=fig.add_subplot(1,1,1)
ax.plot(xdata1,ydata1,color='tab:blue')
ax.plot(xdata2,ydata2,color='tab:orange')

xevents1=EventCollection(xdata1,color='tab:blue',linelength=0.05)
xevents2=EventCollection(xdata2,color='tab:orange',linelength=0.05)

yevents1=EventCollection(ydata1,color='tab:blue',linelength=0.05,orientation='vertical')
yevents2=EventCollection(ydata2,color='tab:orange',linelength=0.05,orientation='vertical')

ax.add_collection(xevents1)
ax.add_collection(xevents2)
ax.add_collection(yevents1)
ax.add_collection(yevents2)

ax.set_xlim([0,1])
ax.set_ylim([0,1])

ax.set_title('line plot with data points')

############################################eventplot###################
import matplotlib.pyplot as plt
import numpy as np
import matplotlib

matplotlib.rcParams['font.size']=8.0

np.random.seed(19680801)

data1=np.random.random([6,50])

color1=['C{}'.format(i) for i in range(6)]

lineoffsets1=np.array([-15,-3,1,1.5,6,10])
linelengths1=[5,2,1,1,3,1.5]

fig,axes=plt.subplots(2,2)

axes[0,0].eventplot(data1,colors=color1,lineoffsets=lineoffsets1,linelengths=linelengths1)
axes[1,0].eventplot(data1,colors=color1,lineoffsets=lineoffsets1,linelengths=linelengths1,
                   orientation='vertical')
data2=np.random.gamma(1,size=[60,50])

colors2=['black']*60
lineoffsets2=1
linelengths2=1
print(data2)
axes[0,1].eventplot(data2,colors=colors2)
axes[1,1].eventplot(data2,orientation='vertical')


###############
import numpy as np
import matplotlib.pyplot as plt

x=[1,2,3,4,5]
y1=[1,1,2,3,5]
y2=[0,4,2,6,8]
y3=[1,3,5,7,9]

y=np.vstack([y1,y2,y3])  #按照行堆积
labels=['Fibonacci','Evens','Odds']

fig, ax=plt.subplots()
ax.stackplot(x,y1,y2,y3,labels=labels)
ax.legend(loc='upper left')
plt.show()

fig, ax=plt.subplots()
ax.stackplot(x,y)


def layers(n,m):
    def bump(a):
        x=1/(0.1+np.random.random())
        y=2*np.random.random()-0.5
        z=10/(0.1+np.random.random())
        
        for i in range(m):
            w=(i/m-y)*z
            a[i]+=x*np.exp(-w*w)
        
    a=np.zeros((m,n))
    for i in range(n):
        for j in range(5):
            bump(a[:,i])
    return a

d=layers(3,100)

fig, ax=plt.subplots()
ax.stackplot(range(100),d.T,baseline='wiggle')




