###########对2D图像进行transform
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.transforms as mtransforms

def get_image():
    delta=0.25
    x=y=np.arange(-3,3,delta)
    X,Y=np.meshgrid(x,y)
    #X为以x为行值的矩阵，Y是以y为列值的矩阵
    Z1=np.exp(-X**2-Y**2)
    Z2=np.exp(-(X-1)**2-(Y-1)**2)
    Z=(Z1-Z2)
    return Z

def do_plot(ax,Z,transform):
    im=ax.imshow(Z,interpolation='none',origin='lower',extent=[-2,4,-3,2],
                 clip_on=True)
    #origin:坐标轴的从小到大，然后可设置
    
    trans_data=transform+ax.transData
    im.set_transform(trans_data)
    
    x1, x2, y1, y2=im.get_extent()
    ax.plot([x1,x2,x2,x1,x1],[y1,y1,y2,y2,y1],'y--',transform=trans_data)
    
    ax.set_xlim(-5,5)
    ax.set_ylim(-4,4)
    
fig, ((ax1,ax2),(ax3,ax4))=plt.subplots(2,2)
Z=get_image()  #返回Z

do_plot(ax1, Z,mtransforms.Affine2D().rotate_deg(30))  #旋转角度

do_plot(ax2,Z,mtransforms.Affine2D().skew_deg(30,15)) # X轴旋转角度,Y轴旋转角度

do_plot(ax3,Z,mtransforms.Affine2D().scale(-1,0.5)) #缩放

do_plot(ax4,Z,mtransforms.Affine2D().rotate_deg(30).skew_deg(30,15).scale(-1,0.5).translate(0.5,-1))
                                                                          #translate平移

################2/用圆形剪切图片
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import matplotlib.cbook as cbook

with cbook.get_sample_data(r'C:\Users\Administrator\one.jpg') as image_file:
    image=plt.imread(image_file)
    
fig, ax=plt.subplots()
im=ax.imshow(image)
patch=patches.Circle((260,200),radius=200,transform=ax.transData)
im.set_clip_path(patch)
ax.axis('off')

