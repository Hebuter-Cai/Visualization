'''
usage of subplots to create axes
author:Victor_Cai
'''
##################first#####################
import matplotlib.pyplot as plt
import numpy as np
data={'apples':10,'orange':15,'limes':20}
names=list(data.keys())
values=list(data.values())
x=np.arange(len(names))
fig,axes=plt.subplots(1,3,figsize=(9,3),sharey=True)
for i in range(len(names)):
    axes[i].set_xticks(x)
    axes[i].set_xticklabels(names)
    
axes[0].bar(x,values)
axes[1].scatter(x,values)
axes[2].plot(x,values)

fig.suptitle('Categorical Plotting')


################2.cohere##############
import numpy as np
import matplotlib.pyplot as plt

np.random.seed(19680801)

dt=0.01
t=np.arange(0,30,dt)
wn1=np.random.randn(len(t))
wn2=np.random.randn(len(t))

s1=np.sin(2*np.pi*10*t)+wn1
s2=np.sin(2*np.pi*10*t)+wn2

fig,axes=plt.subplots(2,1)
axes[0].plot(t,s1,t,s2)#同一个区域画2个折线
axes[0].set_xlim(0, 2)
axes[0].set_xlabel('time')
axes[0].set_ylabel('s1 and s2')
axes[0].grid()

cxy,f=axes[1].cohere(s1,s2,256,1./dt)
axes[1].set_ylabel('coherence')

fig.tight_layout()

###################3.CSD#################
import numpy  as np
import matplotlib.pyplot as plt

fig,(ax1,ax2)=plt.subplots(2,1)
fig.subplots_adjust(hspace=0.5)

dt=0.01
t=np.arange(0,30,dt)

np.random.seed(19680801)

nse1=np.random.randn(len(t))
nse2=np.random.randn(len(t))
r=np.exp(-t/0.05)

cnse1=np.convolve(nse1,r,mode='same')*dt
cnse2=np.convolve(nse2,r,mode='same')*dt

s1=0.01*np.sin(2*np.pi*10*t)+cnse1
s2=0.01*np.sin(2*np.pi*10*t)+cnse2

ax1.plot(t,s1,t,s2)
ax1.set_xlim(0,5)
ax1.set_xlabel('time')
ax1.set_ylabel('s1 and s2')

cxy,f=ax2.csd(s1,s2,256,1./dt)
ax2.set_ylabel('CSD(db)')


#################hlines and vlines
import matplotlib.pyplot as plt
import numpy as np

t=np.arange(0,5,0.1)
s=np.exp(-t)+np.sin(2*np.pi*t)+1
nse=np.random.normal(0,0.3,t.shape)*s

fig, (vax,hax)=plt.subplots(1,2,figsize=(12,6))
vax.plot(t,s+nse,'^')
vax.vlines(t,[0],s)  #ylim,ymax

vax.vlines([1,2],0,1,transform=vax.get_xaxis_transform(),colors='r')

vax.set_xlabel('time (s)')
vax.set_title('Vertical lines demo')

hax.plot(s+nse,t,'^')
hax.hlines(t,[0],s,lw=2)
hax.set_xlabel('time (s)')
hax.set_title('Horizontal lines demo')

###another vline
import matplotlib.pyplot as plt
import numpy as np

np.random.seed(19680801)
x,y=np.random.randn(2,100)

fig,[ax1,ax2]=plt.subplots(2,1,sharex=True)
ax1.xcorr(x,y,usevlines=True,maxlags=50,normed=True,lw=2)
#x坐标轴，usevlines,竖直线，maxlagsX轴的最大刻度
ax1.grid(True)

ax2.acorr(x,usevlines=True,normed=True,maxlags=50,lw=2)
ax2.grid(True)


